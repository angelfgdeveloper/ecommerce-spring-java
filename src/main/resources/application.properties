# Para mostrar logs
logging.level.com.angelfg=DEBUG

#spring.datasource.url=jdbc:postgresql://127.0.0.1:5435/ecommerce-db
#spring.datasource.username=alumno
#spring.datasource.password=123456
spring.datasource.driver-class-name=org.postgresql.Driver

#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update

# Para ver mas información del security
logging.level.org.springframework.security.web.*=debug

# Configuracion de Redis (docker)
spring.redis.host=my-cache-redis
spring.redis.port=6379
spring.cache.redis.debug=true

# Instalar redis
# Iniciar redis (linux) => sudo systemctl restart redis-server
# Detener redis (linux) => sudo systemctl stop redis-server
# Entrar a redis => redis-cli
# KEYS * para mostrar todos las llaves de cache guardadas
# TYPE "getAll::allProducts" => para saber el tipo de dato ingresado
# ttl getAll::allProducts => para mostrar el tiempo de expiracion de ese cache
# get getAll::allProducts => para mostrar informacion del cache guardado (datos en binario)
# monitor => para ver las llamadas a ese cache especifico
# lrange getAll::allProducts 0 -1 => para mostrar la lista de datos de un cache
# flushall => para limipiar todos los caches guardados

# Liquibase
spring.datasource.url=jdbc:postgresql://127.0.0.1:5435/ecommerce-db
spring.datasource.username=alumno
spring.datasource.password=123456

spring.liquibase.change-log=classpath:db/master.xml

# Al actualizar de jpa a liquibase
# ./mvnw liquibase:update -Dliquibase.url=jdbc:postgresql://127.0.0.1:5435/ecommerce-db -Dliquibase.username=alumno -Dliquibase.password=123456 -Dliquibase.changeLogFile=db/master.xml

# Modificamos las secuencias
# SELECT setval('products_sequence', (SELECT MAX(id_product) FROM products));

# Ajustar la secuencia de products
# SELECT setval('products_sequence', (SELECT COALESCE(MAX(id_product), 1) FROM products));
# Ajustar la secuencia de users
# SELECT setval('users_sequence', (SELECT COALESCE(MAX(id_user), 1) FROM users));
# Ajustar la secuencia de user_access
# SELECT setval('user_access_sequence', (SELECT COALESCE(MAX(id_user_access), 1) FROM user_access));
# Ajustar la secuencia de roles
# SELECT setval('roles_sequence', (SELECT COALESCE(MAX(id_role), 1) FROM roles));
# Ajustar la secuencia de privileges
# SELECT setval('privileges_sequence', (SELECT COALESCE(MAX(id_privilege), 1) FROM privileges));
